1、位运算（位运算符中,除～以外,其余均为二元运算符。操作数只能为整型和字符型数据。）
	&：按位与。只有两个操作数对应位同为1时，结果为1，其余全为0. （或者是只要有一个操作数为0，结果就为0），n&1 == 1?”奇数”:”偶数”
	|：按位或。只有两个操作数对应位同为0时，结果为0，其余全为1.（或者是只要有一个操作数为1，结果就为1）
	~：按位非。取反
	^：按位异或。异：1（0,0或1,1即为0  1,0或0,1即为1）
	<<：左位移运算符。乘以2的幂
	>>：右位移运算符。除以2的幂
	>>>：无符号右移运算符。右边的位被挤掉，对于左边移出的空位一概补上0
	
Java使用 补 码 来 表 示 二 进 制 数 ,在补 码 表 示 中 ,最高 位 为 符号 位 ,正数 的 符 号 位 为 0,负数 为 1。
补 码 的 规 定 如 下 :
对 正 数 来 说 ,最高位为 0,其余 各 位 代 表 数 值 本 身 (以二 进制 表 示 )。
对 负 数 而 言 ,把该 数 绝 对 值 的 补 码 按 位 取 反 ,然后 对 整 个数 加 1,即得 该 数的 补 码。java中int是32位的。
取绝对值：(a^(a>>31))-(a>>31)