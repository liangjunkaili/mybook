1、哪些需要回收？
    如何判断？
        引用计数算法，存在循环引用的问题
        可达性分析算法，GC roots、引用链
2、什么是GC roots
    虚拟机栈（栈帧中的本地变量表）中引用的对象
    方法区中类静态属性引用的对象
    方法区中常量引用的对象
    本地方法栈中JNI（Native方法）引用的对象
3、引用是什么？
    强引用：new Object()等
    软引用：有用但非必须的对象，内存不够时，会被第二次GC回收
    弱引用：非必须的对象，下次GC被回收
    虚引用：回收时收到一个通知













parallel scavenge收集器（jdk1.8默认）
    新生代收集器
    使用复制算法
    并行的多线程收集器
目标：
    达到一个可控制的吞吐量（throughput），throughput=运行用户代码时间/（运行用户代码时间+垃圾收集时间）
优势：
    高效率的利用CPU时间
场景：
    适合在后台运算而不需要太多交互的任务
参数：
    最大垃圾收集停顿时间：-XX:MaxGCPauseMillis，>0的毫秒值
    吞吐量的大小：-XX:GCTimeRadio，大于0且小于100的整数，默认99
    -XX:+UseAdaptiveSizePolicy，GC自适应的调节策略的开关
parallel old收集器
    老年代
    标记-整理算法